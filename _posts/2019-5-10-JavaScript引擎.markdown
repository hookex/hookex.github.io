---
layout: post
title: JavaScript引擎
date: '2019-5-10'
---


# JavaScript引擎

## 定义

### 专门处理JavaScript代码的虚拟机

## 实现方式

### 标准解释器

### 以某种方式编译为字节码的即时编译器

## 引擎项目

### V8

- 由Google进行开发，使用C++编写的开源引擎

### JavaScriptCore

- 苹果公司为Safari浏览器开发，以Nitro命名的开源引擎

## V8

### 使用

- chrome
- Node.js

### 设计初衷

- 提高浏览器内部的JavaScript的执行性能

	- 核心区别

		- V8不生成任何字节码或任何中间代码，而是直接编译成了更加高效的机器码

			- 额，引入了字节码
			- https://zhuanlan.zhihu.com/p/26669846

### 内部的线程

- 垃圾回收

	- 方法

		- 标记清除

			- 标记阶段会阻止js执行

		- 增量标记

			- 遍历部分堆
			- 下次一垃圾回收，是从上一次遍历停下来的地方，使得每一次执行的停顿很短

		- 清理的操作是独立的线程来进行的

## 过程

### parser 解析器

- 生成抽象语法树

	- JS句法结构的树形表示形式

### Ignition 解释器

- 根据语法树生成字节码

### 优化编译器 TurboFan

- 将字节码生成优化的机器代码

## 扩展知识

### 堆和栈的区别

- 堆

	- 动态分配的内存，大小不定也不会自动释放
	- JS中引用类型占据空间大、大小不固定，栈内存中存放地址指向堆内存中的对象。按引用访问

- 栈

	- 自动分配的内存空间，由系统自动释放
	- 基本类型占据空间小、大小固定，值保存在栈空间。按值来访问

### 动态类型、静态类型

- 静态类型

	- 在Java中，编译之前所有的属性值以一种固定的对象布局确定下来，
并且在运行时不能动态的增加或者删除
因此属性值（或者说指向这些属性的指针）在内存中，能够以连续的buff存储在内存中
并且每个值之间有固定的偏移量
并且根据属性类型可以很容易的确定偏移量的长度
	- 存储方式

		- 固定对象布局

- 动态类型

	- 实例化之后，能够方便的从对象中添加或者删除属性
	- 存储方式：存储对象属性值在内存中的位置

		- 字典结构

			- 弊端：使得检索属性比非动态语言要慢很多

		- 隐藏类

### 代码分类

- 字节码(Bytecode)

	- 解释

		- 通常是指经过编译，但和机器代码无关，需要解释器转译后才能成为机器代码的中间代码。

	- 特点

		- 不像源码一样可以让人阅读，而是编码后的数值敞亮、引用、指令等构成的序列。

	- 目的

		- 为了实现特定的软件和软件运行环境、与硬件无关。

	- 实现方式

		- 编译器

			- 把源码翻译成字节码

		- 虚拟机

			- 特定平台上的虚拟机将字节码转译成可以直接运行的指令

- 机器码

	- 也称机器语言，一种指令集的体系，CPU可以直接读取的数据

- 汇编代码

	- 机器代码的人类可读形式

### 渲染引擎

- 能够将HTML、CSS、JavaScript文件及相应的资源文件转换成图像结果。
- 如：Webkit

## 参考文章

### JavaScript 如何工作：在 V8 引擎里 5 个优化代码的技巧 https://juejin.im/post/5a102e656fb9a044fd1158c6

### JavaScript中的堆栈 https://segmentfault.com/a/1190000009693516

### V8官方博客 https://v8.dev/blog

### 了解 V8 的字节码「译」
 https://juejin.im/entry/599696206fb9a0249550cba5

### Node.js与V8底层探秘 https://zhuanlan.zhihu.com/p/26669846

